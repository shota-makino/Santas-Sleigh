model "example"
uses "mmsystem" 
declarations
  IDs : set of integer
  ar: array(IDs) of real
  dar: dynamic array(set of integer) of real
  indar: dynamic array(set of integer) of integer
end-declarations


IDs:= {100, 102, 92, 8, 4, 1293, 303, 234}
ar:: [1.2, 2.29, 123, 1, -120, -1.23, -43, 8]
forall(g in IDs|g<200) do
  dar(g) := ar(g)
  indar(g) := 0
end-do

writeln("The index set is ", IDs)
writeln("Array is : ", ar)

writeln
writeln
qsort(true,ar)
writeln("Sorted array is : ", ar)
qsort(false,ar)
writeln("Other way : ", ar)

writeln
writeln
writeln("New array is : ", dar)

qsort(false,dar,indar)
qsort(false,dar,indar)
qsort(false,dar,indar)
writeln("New index sorted array is : ", indar)


declarations
  newar: dynamic array(set of integer) of real
end-declarations
writeln
writeln
forall(g in IDs) do
  newar(g):=dar(indar(g))
end-do

writeln("The sorted array by index set is:",newar)

declarations
  newlist: list of integer
end-declarations

forall(g in IDs) newlist += [g]
writeln
writeln
newlist += [-1]
writeln("New list is: ",newlist)

sum := sum(g in IDs) newlist(g)

writeln(sum)

end-model
